#log-level: none
#json-logs: false

programs:
  helm:
    vars:
      kubeconfig: "{{ .kubeconfig }}"
      namespace: "{{ .kapp.id }}"
      release: "{{ .kapp.id }}"
      kube_context: "{{ .kube_context }}"

    # todo - uncomment once viper supports not lowercasing all map keys
    #    envVars:
    #      RUN_HELM: |-
    #        "{{ if isSet .kapp.vars "run_helm" }}{{ .kapp.vars.run_helm }}{{ else }}true{{ end }}"

    args:
      make:
        install:
          # Search for parameters dynamically. The `findFiles` function takes a list of
          # file name patterns and a starting directory to search from. It then recursively
          # searches for a single file matching the pattern. If one (and only one) is found,
          # it's returned in the result array. Patterns that don't match any files are
          # filtered out.
          #
          # The `.sugarkube.defaultVars` variable is a list populated at runtime containing (in
          # order of precedence: provider, account, profile, cluster, region.
          #
          # So this horrific looking value searches for a file called 'values.yaml' under the kapp
          # cache directory, then files called `values-<provider/account/profile/etc>.yaml`. It takes
          # all files that exists and prepends '-f' to them so they'll be passed as options to helm.
          #
          - name: helm-params
            value: |-
              "{{ listString "/values.yaml$" | findFiles .kapp.cacheRoot | uniq | join "-f " }} {{ mapPrintF "/values-%s.yaml$" .sugarkube.defaultVars | findFiles .kapp.cacheRoot | mapPrintF "-f %s" | uniq | join " " }}"

        delete:
          - name: helm-params
            value: |-
              "{{ listString "/values.yaml$" | findFiles .kapp.cacheRoot | uniq | join "-f " }} {{ mapPrintF "/values-%s.yaml$" .sugarkube.defaultVars | findFiles .kapp.cacheRoot | mapPrintF "-f %s" | uniq | join " " }}"

  kubectl:
    vars:
      kubeconfig: "{{ .kubeconfig }}"
      kube_context: "{{ .kube_context }}"

  aws:
    vars:
      region: "{{ .stack.region }}"

  terraform:
    vars:
      region: "{{ .stack.region }}"
      project: "{{ .project }}"

    templates:
      - source: terraform/backend.tf
        dest: "terraform_{{ .stack.provider }}/_generated_backend.tf"

    # todo - uncomment once viper supports not lowercasing all map keys
#    envVars:
#      RUN_TERRAFORM: |-
#        "{{ if isSet .kapp.vars "run_terraform" }}{{ .kapp.vars.run_terraform }}{{ else }}true{{ end }}"
    args:
      make:
        install:
          # search for terraform vars files under `terraform_<provider>`
          - name: tf-params
            value: |-
              "{{ listString (printf "terraform_%s/.*/defaults.tfvars" .stack.provider) | findFiles .kapp.cacheRoot | uniq | join "-var-file " }} {{ mapPrintF (printf "terraform_%s/.*/%%s.tfvars" .stack.provider) .sugarkube.defaultVars | findFiles .kapp.cacheRoot | mapPrintF "-var-file %s" | uniq | join " " }}"

        delete:
          - name: tf-params
            value: |-
              "{{ listString (printf "terraform_%s/.*/defaults.tfvars" .stack.provider) | findFiles .kapp.cacheRoot | uniq | join "-var-file " }} {{ mapPrintF (printf "terraform_%s/.*/%%s.tfvars" .stack.provider) .sugarkube.defaultVars | findFiles .kapp.cacheRoot | mapPrintF "-var-file %s" | uniq | join " " }}"
